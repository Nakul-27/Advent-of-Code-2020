object Day3 {
  val grid: String = """
.....#.........#...#..##....#..
.#........#...#........#.......
......#......#..#...#....#.#..#
...#.#####.#.......##.#........
...........#......#..#.....#...
#.#..#...#.#...#.##.....#.....#
....#..#....#...#.#...#.##.....
##...#..........##..######.....
.....#...#......#.............#
........##....#...##..#....#...
...#...#.........#.#..........#
..#.#.....##..........#........
##.......................#.....
#..#...##...##.#.........##....
.#....#.#####....#...#...#.....
#......#......###..#........#.#
.#....##..##.###.#.......#.....
.#..#.........##....#.#....#...
........#..................#...
.......#..#..#............#....
........#...................##.
.#......#......#.####......#...
..###.#..#..#.........#........
..#...........###..#.....#.##..
...#.##.#....#................#
#.....#.............#.#........
.#..............#.........#....
##.................#..........#
.#..#....#.###....##..#..#...#.
##........#......##.....#....##
#......#..#........#......#.#..
....#.##.#................##..
.#...#...#..#............##...#
.#..#...#..#..#....##..#.#.#...
#....#...##.#.#......#........#
#..#..#...#.#.....#..##.#......
.....#..#.#..#.##.......#..###.
#......#......#...#............
.....#......#......#..#.##..#.#
......#..##..#.....#....#......
..#..#...#..#...#....###.#.#...
.................#..#..........
......#...##..#.....#...##.....
..#...............#...#.#.....#
.#....#.##.##..#.........##....
...###....##...#......#......##
....#...#.....#.........#..##..
..###.........#..#..#...#......
...##.....#.........#.......#..
.....#.................#.#.....
.#.###.#..#...#..##....#....##.
....#.....##.........#.#.......
.#.#....#..#................#..
..#.#......#......#........#...
#........#....#..#..#..#....#.#
#...........##..#....#..####...
.....#.......#.#...#.#....###..
.......#....#.......#..........
.............#.....#...........
#....#......#...#..##.#........
....#.......#.#.......#....###.
.####.#...........#.#.#...#.#..
#..##....##.#......#...........
...##...#.#.....#.....#........
...#.............#.....#...#...
...#.....#..#.....##...###..#.#
....##..#..##..#..#...#.....#..
........#...................##.
....#.......#.....#.......#....
....##.........#.#.............
......#..#........#.#...#......
.#..#...#...........#......#..#
.#....#.#........#............#
......#...................#...#
##...#.......................#.
........###.......#.......#..#.
...........##.............#....
..##...#.....#....#......#....#
................###...##...#.#.
..#.#.....#....##...#..##......
.....................#.#......#
.......#....##.#..#........##..
.##....#......#....#.........#.
#............#.........#..#.#..
....#...........#..#....#....##
.......#..#.....##.........#...
.##..........#.#.#....#..#.....
........#....##.##.#......#....
....##..##......##.....#.###...
......##.#....##.#.#....#......
..#..#..........#.....##.....##
#........#.##...#.#....#....###
........##............#........
##.##..##.#..#...##............
....#..#....#...........#....#.
..#.......#.#.......#...#......
.#..........##.....#..#...#...#
.................##.#...#...##.
##.............#......#....#...
..........#.#....#.............
...##..#.#.....#.....#.#.......
...##...##.#......#.#...#......
..#..#.....##..##..........##..
......##........##.......#....#
....#..####..#...##........#...
#.......#....#.......##.......#
........#..........#.........#.
.....#....#.........#.#.#.....#
..##.....#....#....#..#......#.
....#..#.##...#..#.....#......#
........###.........#..###...#.
.....#.......#.....#.#.#.......
...##.....#....##.....#.#.#...#
#.##....#.##.....#.#.#........#
.##..#.......#...#.#.......#...
.#..........#.............#....
.#...#...#......#..##..........
.......................#.#....#
............###....#..##.#..#..
...#.#......##....#..#.........
..#...#....#....#.#............
..#.#..###...............##....
.....##...#.....#........#..#.#
...........#......#..#...#.##.#
#...##......##...#..#...#..#...
..##....#............#......#.#
.#.#..#...#...#.#...#...##..##.
..#.#....#.......#.#.#.#.#.##..
....###.##..#...##....#........
.#...............#........#....
...#..#........##...#.##.......
........#..#..#......##........
##....#....#............#......
#....#...#.###.#.###.......#...
...#.###.##....#.........#...##
..#......##.#.....#..#.......#.
##.............#..#..##....#.#.
#...#...##........#.#.......#..
........#..#.....#.#..#..#.#...
#..##.........#.#.#.##...#....#
............#...#....#..#....#.
.....#.......#......##..#......
.#.....................#......#
...................#....#.#....
.....#....#.....##.............
#....##.#....##..#....##....#..
....#..........#..........#....
.....#.#...............#..##...
...#......###.......#..##......
#.#.#....##..#......#.##.#.....
.#...###..#.....##.........#.#.
..#...#.............#....#.....
#..#.............#.....#.....#.
.#.........#.#...#..#....#...#.
#....#......#....#.#..........#
.........................#.....
...................#...........
#.#...#......#....#............
.#..#........#...##....#....#..
..#......#..#..........##......
#.#....#....##....#.........#..
...#.#.#.#..#....##..#....#..#.
..#..............#.....##......
....#.........#...#.....#..#...
..#..................#.#.......
.....##.##........#.#....#..###
..#.#...#.....#..##..##.#.#.#..
.....#......#............#.....
.#.......#....##...............
...#.................#.....#...
...#.#..#.#...##........#....##
..........##...................
#........#..........#.#........
................#..##.##.#....#
....##..#.#.#...#...#....#.#.#.
..#.........#......##....#.....
.##.........#.....#.#..........
...##...###...........#......##
..#........#......#.....##.#...
###.....#.#.#...#.......#....#.
..##...#....###..##.#.#..##....
..###...##.......#.#..#....#..#
..#...............###....#..#..
...........#....#.##..#........
.#...#..#.#...##..#....#...#..#
..#............#......#.....#..
.#...#...#.#...#.#.............
...####.........#....##....#.#.
.....##...#........#.#......#..
...####...#.#..#.#.#.#.........
........#.##.#..#.......#......
......##......#.........#.#....
..#.#...#....#.....###.....##..
#.#.##..........#...##..#..#.#.
.....#................#.#..#..#
.........#........#.....#..#..#
......#...........#...........#
..#........#.#.........#...##..
.....####.....#....##.#........
....#...#........#.......#...#.
...#..#....#.....##....###.....
........#..#..#.#.#............
#..#......#..#....#....#.#.#..#
.........#...#......##.........
..#....#............#..#.....#.
#............#.#...#......#...#
..#..##...#........#.........##
.#...#....##...#.......#..##...
#..#.##......#........##...#...
...#..........#...#..#..#....#.
##..#........##..##...#..###.#.
............##...............#.
#......#...#....#.........#...#
................#..#.#.........
.....#...#...#...##.......#...#
..##.###...#...#.#..##.#.#...#.
#...##..........#....##.#.#.#..
.#.........#..........#........
.......#.#...............#.....
...#...#............#..........
.........#..#..........#.......
.........#..#...#....#.##....#.
..#............#......#....#.##
...#...#.#........#......#..#.#
........#......##...##...#..#.#
.......###......#............#.
#.....#...##.#.#...#.......#.#.
..#......#..............##....#
..#............##.......#.#.#.#
...#.#.....#.#.#........####...
...#................#..........
..#...#....#....#......#..#...#
.###......#..............#.#..#
......#......#..........##..#..
...##.#...........#.#.....##.#.
.#...#......#..........#.......
....#...#....#..........#.#....
..................##..#.....#.#
###.................#......##..
.....#.....#............#.#..#.
.....#........#...#....#.#.....
#.#...#........................
.#...#.......#..#.......#......
.......#.#.....###.#...#.#.....
#...#.#...........##...#.......
.#.......#.....#..#..#....#....
...#..##.....#..#..#.....#.....
...#................###......#.
#..#...##.###..#..##.......#...
.#.#.#........#.#.............#
#.......#..#.......#.....##...#
.#.#.#............#..#....#.#..
...#.#.##.#......##.....#....##
#............###...#....#......
.....#..#..#.#.........##.#....
.#.##........#.#.#...#.......#.
..###..#..#.#...#.##...###.....
#............#.............#...
.#.##.....#..#.......#...#...#.
.#...#........###...####.......
.#.#..##..#.....#.#..#.........
....#.#.#............##..#...#.
###.##......#.#.....#.....#....
.........#...##.....##....#....
..#................#.........#.
#.......###..##..##............
.....#...#.............#..#..#.
..........#...................#
....#....#...........#.........
.##.......##.##.........##.....
#......#.#....#....#...#.#.#...
..#.##..#.###.#.##....#..#.....
#....##.#...#..................
.......#...#...........#...#...
....###.#...#..#...............
##.#.#..#.#......#.#......#...#
.............#.....#.##....#...
#.............###....#...#.##.#
#..#.##.............#.##...#...
.#.#......#.........#...#......
.#.........#.#.#.....##.#.#....
.................#........#....
....##.#.#..#.........#........
#...##......##....#.#..#......#
..........##...##..#......##...
..........#..#.#..##..#..#.....
..#..#.....##........#...#.#...
#..........#.#.#..............#
#..........##.....#.#...##....#
.....#...#..#..#...##.#.......#
.##.#...............#.#...#....
..........#.....#......#.......
.....#.#......##...#.......#...
...........#.#...#.....#....#.#
.###.#........##....#.##...#...
#....#.##....#.###..##.#.......
##...........#..##.........#...
....#.##...#...#.....#.#..#....
........#.#.#..#.#...........##
..........#.##...#....#......#.
.##.....#.#.....##.#.......#.#.
.#..#....#.#.....#.##.#....#..#
#.......#..#..........##....#..
.#........#...#..#.#...#....#..
#......##...#...##..#.#.......#
.#......#.##.#............##.#.
.#....#.....##..##..........#..
..###..#..#...#...#.#.#..##....
.#.#.##...#..#...........#....#
....#......#.......##...#.#.#..
.......#..#...##..#.........#..
....#..#.#.......##........#..#
........#.#....#.##..#.......#.
.....#.......#.#...#.#.........
........#...#....#.#....###..#.
......#..#.##..##..#...#.#.....
.#.#.....#.....#....#...#...#..
...#..#...#..#......#..#.#.....
...##...#...........#..#......#
..#...#####..#.#.##....##......
...........#......#.#..#.......
..#....##..#.##.......#.#.#..#.
..#..#........#...#.......#....
  """

// For this challenge I utlized the website cht.sh a lot to help me with figuring out what I can do in scala.
// Since I use Nvim in Alacritty with Tmux, I simply opened up another window and curl'd the website.
// The Bash Command looks something like this: "curl cht.sh/{language}/{what you want to search}"
// For instance, I could do "curl cht.sh/cpp/auto" and I would get a small explanation of what it is with some examples if they're there.

// Need to trim the grid in order to remove any whitespace above or below the first line
val cleanedGrid = grid.trim()

  // For Part 2, you to do the process for Part 1 but with multiple slopes, so we should create a function that takes the slope as an input rather than a constant.
  // This way we can run the function multiple times and multiply them together to get the necessary result for part 2.

  // There are two possible ways to approach this problem that I can see right off the bat.
  // Both invlove looping through the String in order to determine whether or not you are at an open square or a tree.
  // The First way simply uses for loops to go through the string and maintain a pointer of where you are on the string.
  // The Second way recurses, using the slope, until you get to some end point, in which case you recurse out and determine how many trees you've visited.
  // I'm going to try the second way because why not?
  // TODO: Make this program more functional beacuse right now it is written in more of an Object Oriented Sense
  object Part1 {
    // Figured I would try out using the syntax for default variables (pos: Int = 0) since I have not done that before.
    // For Parsing the grid, and the gridLine, I needed to figure out what exactly I could do, so I needed to mess around with the Scala REPL a tad and figure that out.
    // Here's what I found: 
    // The .indexOf() command allows us to find the first index of a character in a String.
    // If the index is not found, then it will give the value -1
    // With Multiline Strings, the indexes continue onto the next line, meaning that if there are 2 4 character lines, the first character of the second line would be the 5th index.
    // We can use this with the readGrid function.
    def readGrid(gridLine: String, pos: Int = 0, slope: Int): Int = {
      // TODO: Figure out how to do this with immmutable data structures
      // We can check if the end of the parsing is the end of the line or if the character that we are at is '\n.'
      var endOfParse = if(gridLine.indexOf('\n') != -1) gridLine.indexOf('\n') else gridLine.size
      var countedTrees = 0
      var checkTree = gridLine(pos % endOfParse)

      checkTree match {
        // We need to convert the "#" into a char, so we can do that with the .head method
        case checkTree if checkTree == "#".head => {
          countedTrees += 1 
        }
        case _ => {
          countedTrees += 0
        }
      }

      // Base Case
      // This says that if there is no new line at the bottom (since we trimmed the String) then we are at the last line in the code
      if (gridLine.indexOf('\n') == -1) {
        // Then we want to return the counted Trees
        return countedTrees 
      }

      // Otherwise we want to recurse
      countedTrees + readGrid(gridLine.substring(endOfParse).trim, pos + slope, slope)
    }
  }

  def main(args: Array[String]): Unit = {
    import Part1._
    

    println(s"Day 3, Part 1: ${readGrid(cleanedGrid, 0, 3)} Trees")
    
    // Couldn't figure out Part 2 in a reasonable time. 
    // TODO: Figure out Part 2
    // val slope1 = readGrid(cleanedGrid, 0, 1)
    // val slope2 = readGrid(cleanedGrid, 0, 3)
    // val slope3 = readGrid(cleanedGrid, 0, 5)
    // val slope4 = readGrid(cleanedGrid, 0, 7)
    // val slope5 = readGrid(cleanedGrid, 0, 1)

    // println(s"Slope 1: ${slope1}")
    // println(s"Slope 2: ${slope2}")
    // println(s"Slope 3: ${slope3}")
    // println(s"Slope 4: ${slope4}")
    // println(s"Slope 5: ${slope5}")
  }
}
